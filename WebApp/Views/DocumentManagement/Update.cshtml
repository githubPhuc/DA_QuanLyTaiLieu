@{
    ViewBag.Title = "Update Document";
    var data = ViewBag.data as ToolsApp.EntityFramework.Document;
    var file = ViewBag.file as List<ToolsApp.EntityFramework.File>;
    var dataDepartments = ViewBag.dataDepartments as List<ToolsApp.Models.ConfigModel>;
    var dataFodel = ViewBag._Folders as List<ToolsApp.EntityFramework.sp_LoadNameFodelChild_Result>;
}
<input id="IdDoccumentUpdate" name="IdDoccumentUpdate" style="display:none" value="@data.Id" />
<div class="container-fluid " style=" padding:10px;">
    <div class="row">
        <div class="col-md-12">
            <div class="card card-primary card-outline">
                <div class="card-body pad">
                    <form id="insertDocumentForm" enctype="multipart/form-data">

                        <div class="row">
                            <div class="col-md-8">
                                <button id="btnSaveUpdateData" onclick="UpdateDoccument();" type="button" class="btn bg-gradient-success"><i class="fa fa-plus"></i>&nbsp;Cập nhật tài liệu</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Tiêu đề</label>
                                    <input class="form-control form-control-md" type="text" autocomplete="off" value="@data.TitleDocument" id="TitleDocument" name="TitleDocument" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Ngày phát hành</label>
                                    <input value="@(data.DatePublish.HasValue ? data.DatePublish.Value.ToString("dd/MM/yyyy"): DateTime.Now.AddDays(1).ToString("dd/MM/yyyy")) "
                                           class="form-control" type="text" autocomplete="off"
                                           id="DatePublish" name="DatePublish" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Nơi soạn thảo</label>
                                    <select class=" form-control chosen-select" id="IdDepartment" name="IdDepartment" aria-label=".form-select-md">
                                        <option value="">--select--</option>
                                        @foreach (var item in dataDepartments)
                                        {
                                            var parts = data.CodeDocument.Split('-');
                                            var selected = (parts.Length > 2 && item.Description == parts[2]) ? "selected" : string.Empty;
                                            <option value="@item.Id" @(selected)>@item.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Trích yếu</label>
                                    <textarea id="AbstractDocument">@data.AbstractDocument</textarea>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-8">
                                <div class="form-group">
                                    <label>Loại tài liệu</label>
                                    <div class="input-group mb-3">
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input" id="inputGroupFile01" aria-describedby="inputGroupFileAddon01" multiple onchange="displayFileNames()">
                                            <label class="custom-file-label" for="inputGroupFile01">Chọn file</label>
                                        </div>
                                    </div>
                                </div>
                                <div id="file-names" class="mt-2">
                                    @foreach (var item in file)
                                    {
                                        var icon = "<i class=\"";
                                        switch (item.FileExtension)
                                        {
                                            case "pdf":
                                                icon += "fas fa-file-pdf"; // Biểu tượng PDF
                                                break;
                                            case "doc":
                                            case "docx":
                                                icon += "fas fa-file-word"; // Biểu tượng Word
                                                break;
                                            case "xls":
                                            case "xlsx":
                                                icon += "fas fa-file-excel"; // Biểu tượng Excel
                                                break;
                                            case "ppt":
                                            case "pptx":
                                                icon += "fas fa-file-powerpoint"; // Biểu tượng PowerPoint
                                                break;
                                            case "txt":
                                                icon += "fas fa-file-alt"; // Biểu tượng Text
                                                break;
                                            case "zip":
                                                icon += "fas fa-file-archive"; // Biểu tượng Zip
                                                break;
                                            case "jpg":
                                            case "jpeg":
                                                icon += "fas fa-file-image"; // Biểu tượng hình ảnh
                                                break;
                                            case "png":
                                                icon += "fas fa-file-image"; // Biểu tượng hình ảnh
                                                break;
                                            default:
                                                icon += "fas fa-file"; // Biểu tượng tệp mặc định
                                                break;
                                        }
                                        icon += "\"></i> " + item.FileName;
                                        <div id="@item.Id.ToString()-remove-file" class="row">
                                            <div class="col-md-1"><button id="removeFile" onclick="ActionRemoveFile(@item.Id);" type="button" class="bg-gradient-red"><i class="fa fa-remove"></i>xóa file</button></div>
                                            <div class="col-md-6">@Html.Raw(icon) &nbsp; <font color="red">DATABASE</font></div>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Chọn vị trí lưu</label>
                                    <select class="form-control form-control-md chosen-select" id="LastChildID" name="LastChildID" aria-label=".form-select-md">
                                        @foreach (var item in dataFodel)
                                        {
                                            <option value="@item.LastChildID"@(data.FolderId != null && data.FolderId ==item.LastChildID ? "selected=\"selected\"" : "")>@item.Hierarchy</option>

                                        }
                                    </select>
                                </div>

                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>

<style>
    #file-names div {
        margin-top: 5px;
    }

    .custom-file-label {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>
@section scripts
{
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script>
        tinymce.init({
            selector: 'textarea#AbstractDocument'
        });
        $("select").each(function () {
            $(this).select2()
        });
    </script>
    <script>
        $("#DatePublish").datepicker({
            format: 'dd/mm/yyyy',
            changeYear: true,
            changeMonth: true,
            onClose: function (selectedDate) {
                //$("#FromDate").datepicker("option", "minDate", selectedDate);
            }
        });

        $(document).ready(function () {
            loadviewfile();
        });
        function loadviewfile()
        {
             try {
                 $.ajax({
                     url: '@Url.Action("Insert_File")',
                     timeout: 2000000,
                     data: {
                     },
                     success: function (response) {
                         $('.view-insert-file').html(response);
                     },
                     error: function (message) {
                         $(".divLoading").removeClass("loading");
                     }
                 });
             } catch (e) {
             }
        }
        function UpdateDoccument() {
            var files = document.getElementById("inputGroupFile01").files;
            var _TitleDocument = $('#TitleDocument').val();
            var _DatePublish = $('#DatePublish').val();
            var _AbstractDocument = tinymce.get('AbstractDocument').getContent();
            var _IdDepartment = $('#IdDepartment').val();
            var _IdDoccumentUpdate = $('#IdDoccumentUpdate').val();
            var _LastChildID = $('#LastChildID').val();
            var formData = new FormData();
            for (var i = 0; i < files.length; i++) {
                formData.append('files', files[i]);
            }
            formData.append('Id', _IdDoccumentUpdate);
            formData.append('IdDepartment', _IdDepartment);
            formData.append('TitleDocument', _TitleDocument);
            formData.append('AbstractDocument', _AbstractDocument);
            formData.append('DatePublish', _DatePublish);
            formData.append('FolderId', _LastChildID);
            $.ajax({
                url: "@Url.Action("_UpdateFun")",
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
            }).done((result) => {
                if (result.status == 1) {
                    notify("Cập nhật document thành công", "success");
                    setTimeout(() => {
                        window.location = "@Url.Action("Index", "DocumentManagement")";
                    }, 2000);
                }
                else {
                    notify(result.text, "error")
                }
            }).error((result) => {
                notify(result.text, "error")
                console.log(result);
            });
        }
        function ActionRemoveFile(id) {
            
            if (id > 0) {
                
                $.ajax({
                    url: "@Url.Action("_DeleteFileFull")",
                    type: 'POST',
                    data: { id: id },
                }).done((result) => {
                    if (result.status == 1) {
                        notify("Thêm document thành công", "success");
                        const fileNamesDiv = document.getElementById(id +'-remove-file');
                        if (fileNamesDiv) {
                            fileNamesDiv.remove();
                        }
                    }
                    else {
                        notify(result.text, "error")
                    }
                }).error((result) => {
                    notify(result.text, "error")
                    console.log(result);
                });
            }
        }
    function displayFileNames() {
        const input = document.getElementById('inputGroupFile01');
        const label = document.querySelector('.custom-file-label');
        const fileNamesDiv = document.getElementById('file-names');
        const fileNames = Array.from(input.files).map(file => file.name).join(', ');
        label.textContent = fileNames.length > 0 ? fileNames : 'Chọn file';
        Array.from(input.files).forEach(file => {
            const fileExtension = file.name.split('.').pop().toLowerCase();
            let icon;
            switch (fileExtension) {
                case 'pdf':
                    icon = 'fas fa-file-pdf'; // Biểu tượng PDF
                    break;
                case 'doc':
                case 'docx':
                    icon = 'fas fa-file-word'; // Biểu tượng Word
                    break;
                case 'xls':
                case 'xlsx':
                    icon = 'fas fa-file-excel'; // Biểu tượng Excel
                    break;
                case 'ppt':
                case 'pptx':
                    icon = 'fas fa-file-powerpoint'; // Biểu tượng PowerPoint
                    break;
                case 'txt':
                    icon = 'fas fa-file-alt'; // Biểu tượng Text
                    break;
                case 'zip':
                    icon = 'fas fa-file-archive'; // Biểu tượng Zip
                    break;
                case 'jpg':
                case 'jpeg':
                    icon = 'fas fa-file-image'; // Biểu tượng hình ảnh
                    break;
                case 'png':
                    icon = 'fas fa-file-image'; // Biểu tượng hình ảnh
                    break;
                default:
                    icon = 'fas fa-file'; // Biểu tượng tệp mặc định
                    break;
            }

            // Tạo phần tử hiển thị biểu tượng cho mỗi tệp
            const fileRow = document.createElement('div');
            fileRow.innerHTML = `<i class="${icon}"></i> ${file.name}`;
            fileNamesDiv.appendChild(fileRow);
        });
    }


    </script>
}