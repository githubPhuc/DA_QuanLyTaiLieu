//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToolsApp.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QuanLiVanBanEntities : DbContext
    {
        public QuanLiVanBanEntities()
            : base("name=QuanLiVanBanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Config> Configs { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<File> Files { get; set; }
        public virtual DbSet<Folder> Folders { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<RecycleBin> RecycleBins { get; set; }
        public virtual DbSet<User_Page> User_Page { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Delivery> Deliverys { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
    
        public virtual ObjectResult<sp_LoadNameFodelChild_Result> sp_LoadNameFodelChild()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LoadNameFodelChild_Result>("sp_LoadNameFodelChild");
        }
    
        public virtual ObjectResult<sp_loadChart_Result> sp_loadChart(Nullable<int> currentYear)
        {
            var currentYearParameter = currentYear.HasValue ?
                new ObjectParameter("CurrentYear", currentYear) :
                new ObjectParameter("CurrentYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_loadChart_Result>("sp_loadChart", currentYearParameter);
        }
    }
}
